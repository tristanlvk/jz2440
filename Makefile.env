## ========= Makefile.env ====================
# Makefile header
# top level variable definition
# NOTE: for each specific module, those need to be defined :
#				1.TARGET		// for top level
#				2.BINPATH	// for top level
#				3.LIB			// for sub module
#				4.LIBPATH	// for sub module
#				5.EXCLUDE_DIRS		// if needed


CC=arm-linux-gcc
AS=arm-linux-as
LD=arm-linux-ld
OBJCOPY=arm-linux-objcopy
OBJDUMP=arm-linux-objdump
AR=arm-linux-ar -cr

MAKE=make

CFLAGS+= -Wall

RM= -rm -rf

# find all valid subdirs(one sub-depth)
dirs:=$(shell find . -maxdepth 1 -type d)
dirs:=$(basename $(patsubst ./%,%,$(dirs)))
dirs:=$(filter-out $(EXCLUDE_DIRS),$(dirs))
SUBDIRS:=$(dirs)

SRCS_C=$(wildcard *.c)
OBJS_C=$(SRCS_C:%.c=%.o)
DEPS_C=$(SRCS_C:%.c=%.d)

SRCS_S=$(wildcard *.S)
OBJS_S=$(SRCS_S:%.S=%.o)

all:$(TARGET) $(LIB) $(SUBDIRS) $(DEPS)

# ! for toplevel: it's done in specific app folder
# ! because there is memory location requirement in ld process
#$(TARGET):$(OBJS_C) $(OBJS_S)
#$(CC) -o $@.elf $^ $(LDFLAGS)
#$(OBJCOPY) -O binary -S $@.elf $@.bin
#$(OBJDUMP) -D $@.elf > $@.dis
#cp $@.bin $(BINPATH)

# for sub module
$(LIB):$(OBJS_C) $(OBJS_S)
	$(AR) $@ $^
	cp $@ $(LIBPATH)

$(OBJS_C):%.o:%.c
	$(CC) -c $< -o $@ $(CFLAGS)

$(OBJS_S):%.o:%.S
	$(CC) -c $< -o $@ $(CFLAGS)

.PHONY: $(SUBDIRS)
$(SUBDIRS):
	$(MAKE) -C $@

# depend files
-include $(DEPS)

$(DEPS):%.d:%.c
	$(CC) $(CFLAGS) -MM -MF $@ $<

.PHONY:clean
clean:
	for dir in $(SUBDIRS);\
	do $(MAKE) -C $$dir clean || exit 1;\
	done

	$(RM) *.elf *.bin *.dis *.o *.d *.a
	
ifeq ($(TOPDIR),.)
	$(RM) $(LIBPATH)/*
	$(RM) $(BINPATH)/*
endif
	


